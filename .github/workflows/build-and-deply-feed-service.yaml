name: Build and Deploy feed-service
on:
  workflow_dispatch:
  #following to line are for testig purpose
  # push:
  #   branches:
  #     - "feed-service/deployment"
  
    
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: us-central1-c


jobs:
  deploy-feed-service-on-qa:
    env:
      GKE_CLUSTER: gke-qa-prod
    name: deploy on backend QA
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup JDK
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.TESTFILE_SVC }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'


    # Configure Docker to use the gcloud command-line tool as a credential
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    
    - name: Get the GKE credentials so we can deploy to the cluster
      run: |-
        gcloud container clusters get-credentials gke-qa-prod --zone "$GKE_ZONE"
    - name: Prepare Docker
      run: |
        echo "==========Docker Login=========="
    - name: Prepare Docker
      run: |
        echo "==========Docker Login=========="
        echo ${{ secrets.TOKEN }} | docker login docker.pkg.github.com -u piyushknoldus --password-stdin
    
    - name: Docker image build
      working-directory: feed-service
      run: |
        docker build -t docker.pkg.github.com/knoldus/go1percent/feed-service-qa:qa .
  
    # Publish the Docker image to Github Packages
    - name: Publish Docker Image to Github Packages
      run: |
       docker push  docker.pkg.github.com/knoldus/go1percent/feed-service-qa:qa 
       
    # Deploy Leaderboard to GKE
    - name: Deploy to GKE
      run: |-
        kubectl scale deployment feed-service --replicas 0 -n feed-service 
        sleep 1m
        kubectl scale deployment feed-service --replicas 1 -n feed-service 

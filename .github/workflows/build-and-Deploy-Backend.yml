name: Build and Deploy Backend
on:
  workflow_dispatch:
    
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: us-central1-c


jobs:
  deploy-backend-on-qa:
    env:
      GKE_CLUSTER: gke-qa-prod
    name: deploy on backend QA
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup JDK
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY_QA }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'


    # Configure Docker to use the gcloud command-line tool as a credential
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    
    - name: Get the GKE credentials so we can deploy to the cluster
      run: |-
        gcloud container clusters get-credentials gke-qa-prod --zone "$GKE_ZONE"
    - name: Prepare Docker
      run: |
        echo "==========Docker Login=========="
        echo ${{ secrets.PIYUSH_TEMP_GITHUB }} | docker login -u knoldusinc --password-stdin
        docker pull knoldusinc/leaderboard-qa:backend
        docker tag knoldusinc/leaderboard-qa:backend knoldusinc/knoldus_leaderboard-qa-archived:latest
    # Build the Docker image
    - name: Package and Build Backend
      working-directory: app
      run: |
        sbt docker:publishLocal
    - uses: anchore/sbom-action@v0
      with: 
        image: test-image:latest
        artifact-name: report.spdx-json
        output-file: ./report.spdx-json
    - name: cat
      run: |
        pwd
        ls
        cat report.spdx-json
